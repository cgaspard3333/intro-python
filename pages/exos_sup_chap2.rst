üèãÔ∏è Exercices suppl√©mentaires
=========================
.. slide::
Sur cette page se trouvent des exercices suppl√©mentaires pour vous entra√Æner. Ils sont class√©s par niveau de difficult√© :
.. discoverList::
    * Facile : üçÄ
    * Moyen : ‚öñÔ∏è
    * Difficile : üå∂Ô∏è

.. slide::
üçÄ Exercice Sup. 1 : D√©terminer si une ann√©e est bissextile
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. step::
    Avant de commencer cet exercise vous devez faire quelques recherches sur internet pour savoir :
.. discoverList::
    * Qu‚Äôest-ce qu‚Äôune ann√©e bissextile ?
    * Comment peut-on tester si un nombre entier est divisible par un autre en Python ?

.. step::
**Consigne** : Ecrire un programme permettant de d√©terminer si l‚Äôann√©e saisie par l'utilisateur est bissextile ou non et lui afficher le resultat.

**R√©sultat attendu** :

.. code-block:: python
    >> Saisir une ann√©e : 2020
    >> L ann√©e 2020 est bissextile

    #ou

    >> Saisir une ann√©e : 2021
    >> L ann√©e 2021 n est pas bissextile

.. slide::
üçÄ Exercice Sup. 2 : Calculs math√©matiques de base
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Objectif** : Ecrire un programme qui permet de r√©aliser des op√©rations arithm√©tiques simples (addition, soustraction, multiplication, division).

**Consignes** : Demander √† l‚Äôutilisateur de donner deux nombres r√©els et l‚Äôop√©ration √† r√©aliser avec une pr√©cision de deux chiffres apr√®s la virgule. 

**Astuce**:
.. spoiler::
    .. discoverList::
        * Cherchez sur internet comment tronquer un r√©el √† deux chiffres apr√®s la virgule dans un affichage

**R√©sultat attendu** :

.. code-block:: python
    >> Entrer deux nombres r√©els : 2.2
    >> 3.5
    >> le premier nombre r√©el = 2.2 et le second = 3.5
    >> Veuillez choisir :
    >>    1 pour r√©aliser la somme de 2.20 et 3.50
    >>    2 pour r√©aliser la soustraction de 2.20 et 3.50
    >>    3 pour r√©aliser la multiplication de 2.20 et 3.50
    >>    4 pour r√©aliser la division de 2.20 et 3.50
    >> 1
    >> R√©sultat de l addition : 2.2 + 3.5 = 5.70

.. slide::
üçÄ Exercice Sup. 3 : R√©solution d‚Äôun polynome
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Objectif** : √âcrire un programme qui permet de retourner le r√©sultat de  $$f(X) = 1 + X + aX^2 + bX^3 + cX^4 + \dots + zX^n$$

**Consigne** : Demander √† l‚Äôutilisateur d‚Äôentrer la valeur enti√®re $$X$$, le degr√© $$n$$ du polynome et les valeurs enti√®res des coefficients ($$a, b, c, \dots, z$$). Puis retourner le r√©sultat de la fonction $$f(X)$$.

**Astuce**:
.. spoiler::
    Utiliser la r√©curcivit√© ensuivant la m√©thode de H√∂rner  
    C'est √† dire : $$2X^4 + 3X^3+ 2X^2 + X + 1 = ((( (2)*X+3) *X+2) *X+1) * X+1)$$.

**R√©sultat attendu** :
.. code-block:: python
    >> Entrer la valeur de X : 2
    >> Entrer le degr√© du polynome : 4
    >> Entrer la valeur de coefficient : 2
    >> Entrer la valeur de coefficient : 3
    >> Entrer la valeur de coefficient : 2
    >> Entrer la valeur de coefficient : 1
    >> le r√©sultat = 67


.. slide::
‚öñÔ∏è Exercice Sup. 4 : Facturation de t√©l√©communication
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Dans un tarif d‚Äôabonnement de portable, les communications sont factur√©es 0.15‚Ç¨ la minute.

**Consignes** : Connaissant en heures et minutes le d√©but et la fin de la communication, √©crire un programme calculant et affichant :
.. discoverList::
	* la dur√©e de la communication en heures et minutes
	* le co√ªt de la communication

**Contraintes** :
.. discoverList::
	* Une communication peut commencer le jour J et se terminer le jour J+1. 
	* Une communication ne peut durer plus de 8 heures.
	* Le prix de la communication est demi-tarif soit 0.075 euros entre 21h30 et 8h.
	* Une communication peut se d√©rouler en plage tarif normal et tarif r√©duit.

**Tests** : Afin de v√©rifier la validit√© de votre programme, testez les cas suivants :
.. discoverList::
	* *Cas 1* : la communication commence avant 8h et se termine avant 8h
		- d√©but : 6h et fin : 7h30
		- dur√©e : 1h30 soit 90 minutes en demi-tarif
		- co√ªt : 90√ó0.075 = 6.75‚Ç¨

	* *Cas 2* : la communication commence avant 8h et apr√®s 8h (mais avant 21h30) 
		- d√©but : 7h30 et fin : 9h30
		- dur√©e : 2h00 soit 30 minutes en demi-tarif et 90 minutes en plain tarif
		- co√ªt : 30√ó0.075+90√ó0.15 = 15.75‚Ç¨

	* *Cas 3* : la communication commence apr√®s 8h et se termine avant 21h30
		- d√©but : 9h30 et fin : 10h30
		- dur√©e : 1h00 soit 60 minutes en plein tarif
		- co√ªt : 60√ó0.15 = 9.00‚Ç¨

	* *Cas 4* : la communication commence apr√®s 8 h et se termine apr√®s 21h30
		- d√©but : 20h30 et fin : 22h30
		- dur√©e : 2h00 soit 60 minutes en plein tarif et 60 minutes en demi-tarif
		- co√ªt : 60√ó0.15+60√ó0.075 = 13.50‚Ç¨

	* *Cas 5* : la communication commence apr√®s 21h30 h et se termine avant 8h
		- d√©but : 23h30 et fin : 1h30
		- dur√©e : 2h00 soit 120 minutes en demi-tarif
		- co√ªt : 120√ó0.075 = 9.00‚Ç¨

**Resultat attendu** :

.. code-block:: python
    >> Saisir heure de d√©but : 23
    >> Saisir minute de d√©but : 30
    >> Saisir heure de fin : 1
    >> Saisir minute de fin : 30
    >> la dur√©e de la communication = 2.0 h 0
    >> la dur√©e de la communication en demi tarif est de 120 et elle a co√ªt√© 9.0 euros
    >> la dur√©e de la communication en plein tarif est de 0 et elle a co√ªt√© 0.0 euros
    >> le co√ªt total de la communication = 9.0 euros


.. slide::
‚öñÔ∏è Exercice Sup. 5 : Triangle de Pascal
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.. step::
    Ecrire un programme qui construit et affiche le triangle de Pascal de degr√© n (Limiter le degr√© √† 13)
    .. warning::
        Exemple pour n = 6

        .. code-block:: text

            1  
            1  1  
            1  2  1  
            1  3  3  1  
            1  4  6  4  1  
            1  5 10 10  5  1  
            1  6 15 20 15  6  1  

**R√©sultat attendu** : 

.. code-block:: python
    Entrez le degr√© du triangle de Pascal (maximum 13): 6
    1  
    1  1  
    1  2  1  
    1  3  3  1  
    1  4  6  4  1  
    1  5 10 10  5  1  
    1  6 15 20 15  6  1

**Astuces** : 
.. spoiler::
    .. discoverList::
        * Calculer et afficher seulement les valeurs jusqu‚Äô√† la diagonale principale incluse (Limiter le degr√© √† 13)  
        * Construire le triangle ligne par ligne
            - Initialiser le premier √©l√©ment et l‚Äô√©l√©ment de la diagonale √† 1.
            - Calculer les valeurs entre les √©l√©ments initialis√©s de gauche √† droite en utilisant la relation suivante : $$P_{i,j} = P_{i-1,j} + P_{i-1,j-1}$$
